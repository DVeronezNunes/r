/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SfwWizardInstalledProduct.java
 *
 * Created on Nov 24, 2008, 11:49:28 AM
 */
package sfwinstaladorscript.oracleinstallation;

import java.util.ArrayList;
import java.util.Hashtable;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import sfwinstaladorscript.Install;
import sfwinstaladorscript.SfwInstaladorScriptView;
import sfwinstaladorscript.interfaces.SfwWizardPage;
import sfwinstaladorscript.objects.Product;
import sfwinstaladorscript.oracleinstallation.components_interfaces_define.SfwWizardDefineInterfacesBDLINK;
import sfwinstaladorscript.oracleinstallation.components_interfaces_define.SfwWizardDefineInterfacesR11;
import sfwinstaladorscript.oracleinstallation.components_interfaces_define.SfwWizardDefineInterfacesR12;

/**
 * Tela para especificar usuÃ¡rios de produtos nÃ£o selecionados para instalaÃ§Ã£o.
 */
public class SfwWizardOracleProduct3 extends javax.swing.JPanel implements SfwWizardPage {

    private Product _product;
    private ArrayList _productsdefine;
    SfwWizardDefineInterfacesR12 interfaces_r12;
    SfwWizardDefineInterfacesBDLINK interfaces_dblink;
    SfwWizardDefineInterfacesR11 interfaces_r11;

    /** Creates new form SfwWizardInstalledProduct */
    public SfwWizardOracleProduct3(Product product) {
        initComponents();

        this._product = product;

        this.jScrollPaneProductDefine.setViewportView(null);
        if (this._product.get_name().equals("INTERFACES_R12")) {
            interfaces_r12 = new SfwWizardDefineInterfacesR12();
            if (Install.getDefines_interface() != null && !Install.getDefines_interface().isEmpty()) {
                interfaces_r12.populaCampos(Install.getDefines_interface());
                interfaces_r12.jCheckEBS.isSelected();
            }
            this.jScrollPaneProductDefine.setViewportView(interfaces_r12);
        } else if (this._product.get_name().equals("IT_R12DBLINK")) {
            interfaces_dblink = new SfwWizardDefineInterfacesBDLINK();
            if (Install.getDefines_interface() != null && !Install.getDefines_interface().isEmpty()) {
                interfaces_dblink.populaCampos(Install.getDefines_interface());
            }
            this.jScrollPaneProductDefine.setViewportView(interfaces_dblink);
        } else if (this._product.get_name().equals("IT_R11")) {
            interfaces_r11 = new SfwWizardDefineInterfacesR11();
            if (Install.getDefines_interface() != null && !Install.getDefines_interface().isEmpty()) {
                interfaces_r11.populaCampos(Install.getDefines_interface());
            }
            this.jScrollPaneProductDefine.setViewportView(interfaces_r11);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sfwWizardPageTitle1 = new sfwinstaladorscript.components.SfwWizardPageTitle();
        jScrollPaneProductDefine = new javax.swing.JScrollPane();

        setName("Form"); // NOI18N
        setPreferredSize(new java.awt.Dimension(605, 378));

        sfwWizardPageTitle1.setName("sfwWizardPageTitle1"); // NOI18N
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(sfwinstaladorscript.SfwInstaladorScriptApp.class).getContext().getResourceMap(SfwWizardOracleProduct3.class);
        sfwWizardPageTitle1.setSubtitulo(resourceMap.getString("sfwWizardPageTitle1.subtitulo")); // NOI18N
        sfwWizardPageTitle1.setTitulo(resourceMap.getString("sfwWizardPageTitle1.titulo")); // NOI18N

        jScrollPaneProductDefine.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("jScrollPaneInterfaceDefine.border.title"), 0, 0, resourceMap.getFont("jScrollPaneInterfaceDefine.border.titleFont"), resourceMap.getColor("jScrollPaneInterfaceDefine.border.titleColor"))); // NOI18N
        jScrollPaneProductDefine.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneProductDefine.setName("jScrollPaneInterfaceDefine"); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(jScrollPaneProductDefine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 561, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(sfwWizardPageTitle1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 598, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(sfwWizardPageTitle1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPaneProductDefine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 305, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(37, 37, 37))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPaneProductDefine;
    private sfwinstaladorscript.components.SfwWizardPageTitle sfwWizardPageTitle1;
    // End of variables declaration//GEN-END:variables

    /**
     * 
     * @param view
     */
    public void flowSetup(SfwInstaladorScriptView view) {
    }

    /**
     * 
     * @param wzPages
     * @param view
     */
    public void nextClick(Hashtable wzPages, SfwInstaladorScriptView view) {

        if (this._product.get_name().equals("INTERFACES_R12")) {
            if (!interfaces_r12.validaCampos()) {
                JOptionPane.showMessageDialog(null, "Não pode haver campos em branco.", "Atenção", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                if(!interfaces_r12.validaConexao())
                    return;
                else
                    Install.setDefines_interface(interfaces_r12.retornaUsuariosDefine());
            }
        } else if (this._product.get_name().equals("IT_R12DBLINK")) {
            if (!interfaces_dblink.validaCampos()) {
                JOptionPane.showMessageDialog(null, "Não pode haver campos em branco.", "Atenção", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                if(!interfaces_dblink.validaConexao())
                    return;
                else
                    Install.setDefines_interface(interfaces_dblink.retornaUsuariosDefine());
            }
        } else if (this._product.get_name().equals("IT_R11")) {
            if (!interfaces_r11.validaCampos()) {
                JOptionPane.showMessageDialog(null, "Não pode haver campos em branco.", "Atenção", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                Install.setDefines_interface(interfaces_r11.retornaUsuariosDefine());
            }
        }
        view.setWizardPage((JPanel) wzPages.get("wzInstalledProduct"));
    }

    public void backClick(Hashtable wzPages, SfwInstaladorScriptView view) {
        this._productsdefine = new ArrayList();
        Install.set_rolesfw("");
        Install.set_userole(true);
        Install.set_productdefine(this._productsdefine);
        view.setWizardPage((JPanel) wzPages.get("wzFlowDatabase"));
    }
}
